{
  "name": "phantom-express",
  "version": "0.0.1",
  "description": "Prepares the dynamic/ajaxed page for Google search engine",
  "main": "phantom-express",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Andrius Skerla"
  },
  "license": "BSD-2-Clause",
  "dependencies": {
    "lodash": "~1.3.1"
  },
  "readme": "phantom-express\n===============\n\nphantom-express middleware allows for dynamically created content to be visible to Google crawler.\nThis middleware tests the request for an ```_escaped_fragment_``` query parameter. If the parameter is detected the middleware passes pretty URL to the phantomjs process.\n\nCompatible with ```requirejs```\n\n### How to use it?\n\n1. Install ```phantomjs```\n\n\tOn MAC:\n\t```sh\n\tbrew install phantomjs \n\t```\n\n\tOn Ubuntu:\n\t```sh\n\tsudo apt-get update\n\tsudo apt-get install build-essential chrpath git-core libssl-dev libfontconfig1-dev\n\tgit clone git://github.com/ariya/phantomjs.git\n\tcd phantomjs\n\tgit checkout 1.9\n\t./build.sh\n```\n    Warning: ```apt-get``` is having an issue installing recent version of ```phantomjs```. \n    Avoid using ```apt-get install phantomjs```\n\n2. Add middleware to the express\n\n\t```javascript\n\tvar phantomExpress = require(\"phantom-express\");\n\n\tapp.use(express.query())\n\tapp.use(phantomExpress(options));\n\t```\n\nDefault options:\n```javascript\noptions = {\n    // Currently the middleware caches the response from the\n    // phantomjs process in the memory. The parameter defines\n    // TTL in seconds. If 0 is passed the cache will be ignored.\n    cacheLifetime: 3600\n\n    // Dump status to the console or not\n    verbose: false\n\n    // Prepends the string to the pretty generated hash\n    // ex. if '!' is defined ->  #!/home/page\n    hashPrepend: ''\n}\n```\n\n\n\n### How it works?\n\n\nThe middleware detects if the request URL contains ```_escaped_fragment_``` (ex. ```http://mysite.com/some/path?_escaped_fragment_=hello/world```) query parameter. If so, it parses the request url, generates pretty URL with hash fragment (ex. ```http://mysite.com/some/path#hello/world```) and passes it to the phantomjs proccess.\n\nStep by step process:\n* The phantomjs proccess renders the page\n* Evaluates javascript code\n* Waits 5 seconds after last resource has been received (useful for requirejs)\n* Grabs the generated HTML\n* Sends it to the Google crawler\n\nMore information at: https://developers.google.com/webmasters/ajax-crawling/docs/specification\n",
  "readmeFilename": "README.md",
  "_id": "phantom-express@0.0.1",
  "dist": {
    "shasum": "ac6996416ff07fb9ffc0d76326b5385fc79927f6",
    "tarball": "http://registry.npmjs.org/phantom-express/-/phantom-express-0.0.1.tgz"
  },
  "_from": "phantom-express@*",
  "_npmVersion": "1.3.9",
  "_npmUser": {
    "name": "rainder",
    "email": "rainder@gmail.com"
  },
  "maintainers": [
    {
      "name": "rainder",
      "email": "rainder@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "ac6996416ff07fb9ffc0d76326b5385fc79927f6",
  "_resolved": "https://registry.npmjs.org/phantom-express/-/phantom-express-0.0.1.tgz"
}
